@mixin break-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
    + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin flex-center{
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin multi-text-shadow($n, $color) {
  $shadows: ();
  
  @for $i from 1 through $n {
    $shadow: #{$i}px #{$i}px 0px $color;
    $shadows: append($shadows, $shadow, comma);
  }
  
  text-shadow: $shadows;
}

@mixin multi-dark-text-shadow($n, $color) {
  $shadows: ();
  $prevCol: $color;

  @for $i from 1 through $n {
    // Darken the color slightly with each iteration
    $darkerColor: darken($prevCol, $i * 0.061%);
    $prevCol: $darkerColor;
    $shadow: #{$i}px #{$i}px 0px $darkerColor;
    $shadows: append($shadows, $shadow, comma);
  }
  text-shadow: $shadows;
}

@mixin multi-box-shadow($n, $color) {
  $shadows: ();
  
  @for $i from 1 through $n {
    $shadow: #{$i}px #{$i}px 0px $color;
    $shadows: append($shadows, $shadow, comma);
  }
  
  box-shadow: $shadows;
}

@mixin multi-dark-box-shadow($n, $color) {
  $shadows: ();
  $prevCol: $color;

  @for $i from 1 through $n {
    // Darken the color slightly with each iteration
    $darkerColor: darken($prevCol, $i * 0.061%); // Adjust the percentage as needed
    $prevCol: $darkerColor;
    $shadow: #{$i}px #{$i}px 0px $darkerColor;
    $shadows: append($shadows, $shadow, comma);
  }

  box-shadow: $shadows;
}